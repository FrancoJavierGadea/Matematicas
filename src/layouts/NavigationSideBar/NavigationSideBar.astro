---
import { baseURL } from "@utils/baseURLUtil";
import SideBarItem from "./SideBarItem.astro";

const {

    links = [],

	id = 'offcanvasScrolling',

	title = '',

	titleURL,

} = Astro.props;
---

<aside class="offcanvas offcanvas-start show" data-bs-scroll="true" data-bs-backdrop="false" tabindex="-1" id={id} >
    
    <div class="offcanvas-header">

        <h5 class="offcanvas-title">
			{titleURL ? 
				<a href={baseURL(titleURL)}>{title}</a>
				:
				<span>{title}</span> 
			}
		</h5>

        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close" />
    </div>

    <div class="offcanvas-body">

        <ul class="links">
			{
				links.map((link) => {

					return  <SideBarItem item={link} class="link-item" />	
				})
			}
		</ul>

    </div>
</aside>


<style>
  
	aside.offcanvas {

		--bs-offcanvas-width: 300px;
		--bs-offcanvas-zindex: 10500; 

		@media (min-width: 992px) {
			
			position: sticky;
			left: 0;
			top: var(--nav-height, 0);
			height: calc(100vh - var(--nav-height, 0));
			transform: none;
			visibility: visible;
			flex-shrink: 0;
			--bs-offcanvas-width: 300px;
			--bs-offcanvas-zindex: 9000;
				

			.offcanvas-header .btn-close {
				visibility: hidden;
			}
		}

		@media (max-width: 575.98px) {

			--bs-offcanvas-width: 100vw;
		}
	} 

	.offcanvas-title {
		a {
			text-decoration: none;
			color: currentColor;
		}
	}

	.offcanvas-body {

		.links {
			list-style: none;
			padding: 0;
			display: flex;
			flex-direction: column;
			gap: 20px;

			
			*[data-folder-links] {
				order: 1;
			}

			*[data-link] {
				order: 2;
			}	
		}
	
	}

</style>