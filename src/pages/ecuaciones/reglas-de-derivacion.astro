---
import Layout from "@layouts/Layout.astro";
import "@css/Custom-mathjax.css";
import {renderLatexToCHTML} from "@utils/RenderLatexCHTML.js";
import { getEntry } from "astro:content";
import EquationCard from "@components/ecuaciones/EquationCard.astro";
import Controls from "@components/ecuaciones/Controls.astro";
import Equation from "@components/ecuaciones/Equation.astro";

const renderLatex = await renderLatexToCHTML();

const EQ = await Promise.all([
    getEntry('json', 'reglas-de-derivacion/basico'),
    getEntry('json', 'reglas-de-derivacion/raiz-cuadrada'),
    getEntry('json', 'reglas-de-derivacion/exponencial'),
    getEntry('json', 'reglas-de-derivacion/logaritmo'),
    getEntry('json', 'reglas-de-derivacion/trigonometricas'),
    getEntry('json', 'reglas-de-derivacion/trigonometricas-inversas'),
    getEntry('json', 'reglas-de-derivacion/operaciones'),
]);

const title = "Reglas de derivacion";
---

<Layout title={title} sidebar={{title}} logo="ecuaciones" home="/ecuaciones">

    <Controls slot="sidebar-body" equations={EQ} />

    <section class="horizontal-scroll-bar">
    {
        EQ.map((equations) => {

            return <details open>
                <summary>{equations.id.split('/').at(1).replaceAll('-', ' ')}</summary>

                <article class="Equations">
                {
                    equations.data.map(({tags, name, simple, composition}) => {

                        const tabs = [
                            simple ? 'simple' : null, 
                            composition ? 'compuesta' : null
                        ]
                        .filter(v => v);

                        return <EquationCard name={name} tags={tags} tabs={tabs}>
                            {
                                simple && <Fragment slot="simple">
                                    <Equation latex={simple.function} title="Funcion">
                                        <Fragment set:html={renderLatex.getHTML(simple.function)}/>
                                    </Equation> 

                                    <Equation latex={simple.derivative} title="Derivada">
                                        <Fragment set:html={renderLatex.getHTML(simple.derivative)}/>
                                    </Equation>
                                </Fragment>
                            }
                            {
                                composition && <Fragment slot="compuesta">
                                    <Equation latex={composition.function} title="Funcion">
                                        <Fragment set:html={renderLatex.getHTML(composition.function)}/>
                                    </Equation>

                                    <Equation latex={composition.derivative} title="Derivada">
                                        <Fragment set:html={renderLatex.getHTML(composition.derivative)}/>
                                    </Equation>
                                </Fragment>
                            }
                        </EquationCard>
                    })
                }
                </article>
            </details>
        })
    }
    </section>

    <style set:html={renderLatex.getStyles()} />
</Layout>

<style>
    
    section {
        margin-bottom: 20px;
    }
    details {
        margin-block: 30px;
        width: fit-content;

        summary {
            font-size: 25px;
            font-weight: bold;
            &::first-letter {
                text-transform: capitalize;
            }
            padding-bottom: 20px;
        }
    }

    .Equations {
        display: flex;
        justify-content: start;
        flex-wrap: wrap;
        gap: 20px;
        width: fit-content;
    }

    .Equations :global(.Equation) {

        & :global(.MathJax) {
            margin-block: 0;
        }

        font-size: 24px;
    }
    
    .Equations :global(.hide-equation) {
        display: none;
    }

</style>



