---
import { getCollection } from "astro:content";
import DocsLayout from "@layouts/DocsLayout.astro";
import ExcalidrawEmbed from "@layouts/ExcalidrawEmbed/ExcalidrawEmbed.astro";

export async function getStaticPaths() {

    const blogEntries = await getCollection('docs');

    return blogEntries.map((entry) => ({

        params: { slug: entry.slug },

        props: { entry },
    }));
}

const { entry } = Astro.props;

const { Content } = await entry.render();
---

<DocsLayout currentPage={entry.id} title={entry.data.title || entry.slug.split('/').at(-1)}>

    <div>

        <div class="Doc-source">

            <button class="btn" title="Mostrar / Ocultar Excalidraw"
            
                onclick="document.getElementById('excalidraw-embed').classList.toggle('show')" 
            >
                <i class="bi bi-pencil-square"></i>
            </button>
    
            <a href={`${import.meta.env.PUBLIC_GITHUB_REPOSITORY}/tree/main/src/content/${entry.collection}/${entry.id}`} 
                target="_blank" rel="noopener noreferrer" title="Ver en github"
            >
                <i class="bi bi-github"></i>
            </a>
    
            <a href={`${import.meta.env.PUBLIC_GITHUB_RAW}/main/src/content/${entry.collection}/${entry.id}`} 
                target="_blank" rel="noopener noreferrer" title="Ver raw markdown"
            >
                <i class="bi bi-filetype-raw"></i>
            </a>
        </div>

        <div class="Doc-content">

            <div class="Render-markdown markdown-body" style="--var-x: red;">
        
                <Content />
        
            </div>

            <div class="excalidraw-embed" id="excalidraw-embed">

                <ExcalidrawEmbed />

            </div>

        </div>
    

    </div>

</DocsLayout>

<style>

    .Doc-source {
        display: flex;
        justify-content: end;
        padding-inline: 20px;
        padding-bottom: 20px;
        gap: 20px;

        a {
            text-decoration: none;
            color: #000;
            font-size: 24px;

            &:hover {
                color: rgb(5, 72, 159);
            }
        }
        button {
            font-size: 24px;
            padding: 0;
            border: none;

            &:hover {
                color: rgb(5, 72, 159);
            }
        }
    }
    .Doc-content {
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 1fr;

        & > * {
            grid-row-start: 1;
            grid-column-start: 1;
        }


        .excalidraw-embed {
            visibility: hidden;
        }
        .excalidraw-embed.show {
            visibility: visible;
        }
    }

    .Render-markdown {

        padding-block: 20px;
        padding-inline: clamp(0px, 2vw, 50px);

        & :global(mjx-container.MathJax) {

            font-size: 1.2em;
            padding-block: 20px;
        }
    }
</style>

