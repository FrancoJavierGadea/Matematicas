---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Doc from "@layouts/Doc.astro";

import { CollectionFileStructure } from "@utils/CollectionUtils";
import FolderContent from "@components/FolderContent.astro";


export async function getStaticPaths() {

    const docs = await getCollection('docs');

    const FileStructure = new CollectionFileStructure({collection: docs});

    const files = FileStructure.getAll();

    return files.map((file) => ({

        params: { slug: file.slug },

        props: { file },
    }));
}

const { slug } = Astro.params;
const { file } = Astro.props;


const title =  (() => {

    if(file.entry?.data.title) return file.entry?.data.title;

    const title = file.name;

    return `${title.at(0).toUpperCase()}${title.slice(1)}`;

})();


const sideBar = await (async () => {
    
    const docs = await getCollection('docs');
    
    const FileStructure = new CollectionFileStructure({collection: docs});

    const {result, parents} = FileStructure.find(file.path);
    
    parents.forEach(folder => folder.open = true);
    
    if(result.type === 'file'){
    
        result.active = true; 
    }
    
    if(result.type === 'folder'){

        result.open = true
    }

    return {
        title: 'Docs',
        titleURL: '/docs',
        links: [
            ...FileStructure.files
        ]
    }
})();

---

<Layout title={title} sideBar={sideBar}>

    {
        file.type === 'file' ?

            <Doc doc={file} />
        :
            <FolderContent folder={file} />
    }

</Layout>





